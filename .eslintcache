[{"/home/islam/Documents/react-redux-learning/src/index.js":"1","/home/islam/Documents/react-redux-learning/src/App.js":"2","/home/islam/Documents/react-redux-learning/src/reportWebVitals.js":"3"},{"size":688,"mtime":1606316818701,"results":"4","hashOfConfig":"5"},{"size":3251,"mtime":1606331400270,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606310119129,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"nv8fgz",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/islam/Documents/react-redux-learning/src/index.js",[],["16","17"],"/home/islam/Documents/react-redux-learning/src/App.js",["18"],"import React, { Component } from 'react';\nimport './mysass.scss';\n\n\nclass Car extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tracks: \"Hook Tasks\",\n      references: \"Hooks state description\",\n      schemas: \"User id\",\n      textno: \"1999\",\n      shows: true\n    };\n  }\n\n   delHeader = () => {\n    this.setState({shows: false});\n  }\n\n   changeReferences = () => {\n    this.setState({references: \"Add Dashbord description\"});\n  }\n \n    changeTextno = () => {\n    this.setState({textno: \"Add Dashbord description\"});\n  }\n\n\n    componentDidMount() {\n    setTimeout(() => {\n      this.setState({textno: \"2020\"})\n    }, 1000)\n  }\n\n    shouldComponentUpdate() {\n    return true;\n  }\n\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n    document.getElementById(\"div10\").innerHTML =\n    \"Before the update, the favorite was \" + prevState.textno;\n  }\n\n\n  componentDidUpdate() {\n    document.getElementById(\"div20\").innerHTML =\n    \"The updated favorite is \" + this.state.textno;\n  }\n\n    componentDidUpdate() {\n    document.getElementById(\"mydivexample\").innerHTML =\n    \"The updated favorite is \" + this.state.references;\n  }\n\n    shootclicking() {\n    alert(\"Learning React Shots\");\n  }\n\n    shootbindthis = () => {\n    alert(this);\n    /*\n    The 'this' keyword refers to the component object\n    */\n  }\n\n\n     shoot = (a) => {\n         alert(a);\n      }\n\n      shoot1(a) {\n    alert(a);\n      }\n\n\n       shoot2 = (a, b) => {\n    alert(b.type);\n    /*\n    'b' represents the React event that triggered the function,\n    in this case the 'click' event\n    */\n  }\n\n\n  render() {\n\n  \t   let MyHeader;\n    if (this.state.shows) {\n      MyHeader = <Container />;\n    };\n\n\n    return (\n      <div>\n        <h1>My {this.state.tracks}</h1>\n        <p>\n          It is a {this.state.textno}\n          </p>\n            <p>\n          {this.state.schemas}\n          </p>\n          <p>\n            from {this.state.references}.\n        </p>\n\n            <button\n          type=\"button\"\n          onClick={this.changeReferences}\n        >We are changing Tracks References</button>\n\n\n       <h1>My Text no. is {this.state.textno}</h1>\n\n       <button\n          type=\"button\"\n          onClick={this.textno}\n        >We are changing Text No.</button>\n\n             <div id=\"div10\"></div>\n        <div id=\"div20\"></div>\n\n          <div id=\"mydivexample\"></div>\n\n           {MyHeader}\n\n           <button onClick={this.shootclicking}>Learning React Shots!</button>\n\n          <button onClick={this.shootbindthis}>The react bind this method</button>\n     \n          <button onClick={() => this.shoot(\"Send parameters into an event handler\")}>Take the shot!</button>\n           \n            <button onClick={this.shoot1.bind(this, \"Bind the event handler to this.\")}>Click to pass arguments</button>\n   \n         <button onClick={(ev) => this.shoot2(\"React event Object\", ev)}>Arrow Function: Sending the event object manually</button>\n\n\n      </div>\n    );\n  }\n}\n\n\n\nclass Container extends Component {\n  componentWillUnmount() {\n    alert(\"---- The component named Header is about to be unmounted.---- \");\n  }\n  render() {\n    return (\n      <h1>I am learning Unmounting emthod for React</h1>\n\n    );\n  }\n}\n\n\nexport default Car;\n\n\n\n","/home/islam/Documents/react-redux-learning/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":53,"column":5,"nodeType":"25","messageId":"26","endLine":56,"endColumn":4},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","unexpected","no-global-assign","no-unsafe-negation"]